# ========================
# Clash-ALL 优化配置
# ========================

# 机场节点订阅

proxy-providers:

  红杏云:
    url: "机场订阅地址"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 180
    filter: "^((?!(直连|拒绝|域名|问题|访问|订阅|失败|失联|剩余|流量|距离|下次|重置|套餐|到期|官网|刷新|失败|异常|公告)).)*$"

  糖果云:
    url: "机场订阅地址"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 180
    filter: "^((?!(直连|拒绝|域名|问题|访问|订阅|失败|失联|剩余|流量|距离|下次|重置|套餐|到期|官网|刷新|失败|异常|公告)).)*$"    
    
  冰云:
    url: "机场订阅地址"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 180
    filter: "^((?!(直连|拒绝|域名|问题|访问|订阅|失败|失联|剩余|流量|距离|下次|重置|套餐|到期|官网|刷新|失败|异常|公告)).)*$"
    
  谷歌云:
    url: "机场订阅地址"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 180
    filter: "^((?!(直连|拒绝|域名|问题|访问|订阅|失败|失联|剩余|流量|距离|下次|重置|套餐|到期|官网|刷新|失败|异常|公告)).)*$"    

proxies:
  - {name: 直连, type: direct}
  - {name: 拒绝, type: reject}

# ========================
# 主要端口设置
# ========================
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7895

allow-lan: true
mode: rule
log-level: info

external-controller: 0.0.0.0:9090
# external-ui: ui
# external-ui-name: zashboard
# external-ui-url: https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip
secret: "123456"

# ========================
# DNS 设置
# ========================
dns:
  enable: true
  listen: 0.0.0.0:7874
  ipv6: false
  enhanced-mode: fake-ip
  fake-ip-range: 198.20.0.1/16
  nameserver:
    - 202.103.0.68
    - 202.103.24.68
    - 202.103.44.150
    - 114.114.114.114
    - 223.5.5.5
    - 119.29.29.29
    - https://doh.pub/dns-query
    - https://cloudflare-dns.com/dns-query
  fake-ip-filter:
    # Localhost
    - 'localhost'
    # LAN & Intranet
    - '*.lan'
    - '*.local'
    # Private IP Ranges
    - '10.0.0.0/8'
    - '127.0.0.0/8'
    - '172.16.0.0/12'
    - '192.168.0.0/16'
    # China
    - 'geosite:cn'
    - 'geoip:cn'

# 红杏云
    - +.hongxingyun10.vip
    - +.hongxingdl.com
    - +.hongxingdl.club
    - +.hongxingyun.blog
    - +.hongxingdl.love
    - +.hongxingdl.it
    - +.hongxingdl.one
    - +.hongxingdl.co
    - +.hongxingdl.cc
    - +.hongxingyun.vip
    - +.hongxingyun.co
    - +.hongxingyun.org
    - +.hongxingyun.us
    - +.hongxingyun.pro
    - +.hongxingyun.help
    - +.hongxingyun.club
# 糖果云 
    - +.candytally.help
    - +.candytally.diy
    - +.candytally.cc
    - +.candytally.vip
    - +.candytally.co
    - +.candytally.cyou
    - +.candytally.xyz
# 冰云
    - +.xby03.xyz
    - +.xiaoby.ink
    - +.ddy.bingcloud.ink
    - +.bingcloud.ink
# 69云 
    - +.69yun69.com
    - +.checkhere.top
# QRN170 
    - +.qrn170.lecms.store
# QGPC1-200G
    - +.gpc1.lecms.store
    - +.xiaoniuyun.cc  
# CFV
    - +.cfv.lecms.store    

ipv6: false

# ========================
# TUN 模块
# ========================
tun:
  enable: true
  stack: gvisor
  device: utun
  endpoint-independent-nat: true
  auto-route: false
  auto-detect-interface: false
  auto-redirect: false
  strict-route: false

profile:
  store-selected: true
  store-fake-ip: true

# ========================
# 策略组定义
# ========================
default: &default
  type: select
  proxies:
    - 直连
    - 所有-智选
    - 所有-手选
    - 所有-自动
    - 香港-故转
    - 香港-智选
    - 香港-手选
    - 香港-自动
    - 台湾-故转
    - 台湾-智选
    - 台湾-自动
    - 日本-故转
    - 新加坡-故转
    - 新加坡-智选
    - 新加坡-手选
    - 新加坡-自动
    - 美国-故转
    - 美国-智选
    - 美国-手选
    - 美国-自动
    - 其他-故转
    - 拒绝

proxy-groups:

  # 业务分流组

  - {name: AI, <<: *default}
  - {name: Meta AI, <<: *default}
  - {name: Perplexity, <<: *default}
  - {name: Stream Media, <<: *default}
  - {name: Youtube, <<: *default}
  - {name: Google, <<: *default}
  - {name: GitHub, <<: *default}
  - {name: Reddit, <<: *default}  
  - {name: Nvidia, <<: *default}
  - {name: Apple, <<: *default}
  - {name: Microsoft, <<: *default}
  - {name: Games, <<: *default}
  - {name: Crypto, <<: *default}
  - {name: Test, <<: *default}
  - {name: Block, <<: *default}
  - {name: 强外, <<: *default}
  - {name: 国外, <<: *default}
  - {name: 强内, <<: *default}
  - {name: 国内, <<: *default}
  - {name: 其他, <<: *default}  

  # 所有组

  - name: 所有-手选
    type: select
    include-all: true
    filter: "^((?!(直连|拒绝|域名|问题|访问|订阅|失败|失联|剩余|流量|距离|下次|重置|套餐|到期|官网|刷新|失败|异常|公告)).)*$"

  - name: 所有-智选
    type: smart
    include-all: true
    policy-priority: "(?=.*糖果云).*$:1.5;(?=.*红杏云).*$:1.4;(?=.*冰云).*$:1.3;(?=.*QGPC1-200G).*$:1.2;(?=.*69云).*$:1.1;(?=.*QRN170).*$:1.0;(?=.*CFV).*$:0.8;.*:1.0"
    uselightgbm: true
    collectdata: true
    health-check: 
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 60
      tolerance: 2
    strategy: sticky-sessions
    interval: 180
    filter: "^((?!(直连|拒绝|域名|问题|访问|订阅|失败|失联|剩余|流量|距离|下次|重置|套餐|到期|官网|刷新|失败|异常|公告)).)*$"
    
  - name: 所有-自动
    type: url-test
    include-all: true
    tolerance: 50
    interval: 300
    filter: "^((?!(直连|拒绝|域名|问题|访问|订阅|失败|失联|剩余|流量|距离|下次|重置|套餐|到期|官网|刷新|失败|异常|公告)).)*$"

  # 香港组

  - name: 香港-故转
    type: fallback
    interval: 180
    lazy: false
    proxies:
      - 香港-手选
      - 香港-智选
      - 香港-自动
  
  - name: 香港-手选
    type: select
    include-all: true
    filter: "(?=.*(广港|香港|HK|Hong Kong|🇭🇰|HongKong)).*$"
    
  - name: 香港-智选
    type: smart
    include-all: true
    policy-priority: "(?=.*糖果云).*$:1.5;(?=.*红杏云).*$:1.4;(?=.*冰云).*$:1.3;(?=.*69云).*$:1.1;.*:1.0"
    uselightgbm: true
    collectdata: true
    health-check: 
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 60
      tolerance: 2
    strategy: sticky-sessions
    interval: 180
    filter: "(?=.*(广港|香港|HK|Hong Kong|🇭🇰|HongKong)).*$"
    
  - name: 香港-自动
    type: url-test
    include-all: true
    tolerance: 50
    interval: 300
    filter: "(?=.*(广港|香港|HK|Hong Kong|🇭🇰|HongKong)).*$"
 
  # 台湾组

  - name: 台湾-故转
    type: fallback
    interval: 180
    lazy: false
    proxies:
      - 台湾-手选
      - 台湾-智选

  - name: 台湾-手选
    type: select
    include-all: true
    filter: "(?=.*(广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan)).*$"
    
  - name: 台湾-智选
    type: smart
    include-all: true
    policy-priority: "(?=.*糖果云).*$:1.5;(?=.*红杏云).*$:1.4;(?=.*冰云).*$:1.3;(?=.*69云).*$:1.1;.*:1.0"
    uselightgbm: true
    collectdata: true
    health-check: 
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 60
      tolerance: 2
    strategy: sticky-sessions
    interval: 180
    filter: "(?=.*(广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan)).*$"
    
  - name: 台湾-自动
    type: url-test
    include-all: true
    tolerance: 50
    interval: 300
    filter: "(?=.*(广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan)).*$"

  # 日本组

  - name: 日本-故转
    type: fallback
    interval: 180
    lazy: false
    proxies:
      - 日本-手选
      - 日本-智选
  - name: 日本-手选
    type: select
    include-all: true
    filter: "(?=.*(广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan)).*$"
  - name: 日本-智选
    type: smart
    include-all: true
    policy-priority: "(?=.*糖果云).*$:1.5;(?=.*红杏云).*$:1.4;(?=.*冰云).*$:1.3;(?=.*69云).*$:1.1;.*:1.0"
    uselightgbm: true
    collectdata: true
    health-check: 
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 60
      tolerance: 2
    strategy: sticky-sessions
    interval: 180
    filter: "(?=.*(广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan)).*$"

  # 新加坡组

  - name: 新加坡-故转
    type: fallback
    interval: 180
    lazy: false
    proxies:
      - 新加坡-手选
      - 新加坡-智选

  - name: 新加坡-手选
    type: select
    include-all: true
    filter: "(?=.*(广新|新加坡|SG|坡|狮城|🇸🇬|Singapore)).*$"
    
  - name: 新加坡-智选
    type: smart
    include-all: true
    policy-priority: "(?=.*糖果云).*$:1.5;(?=.*红杏云).*$:1.4;(?=.*冰云).*$:1.3;(?=.*69云).*$:1.1;.*:1.0"
    uselightgbm: true
    collectdata: true
    health-check: 
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 60
      tolerance: 2
    strategy: sticky-sessions
    interval: 180
    filter: "(?=.*(广新|新加坡|SG|坡|狮城|🇸🇬|Singapore)).*$"
    
  - name: 新加坡-自动
    type: url-test
    include-all: true
    tolerance: 50
    interval: 300
    filter: "(?=.*(广新|新加坡|SG|坡|狮城|🇸🇬|Singapore)).*$"

  # 美国组

  - name: 美国-故转
    type: fallback
    interval: 180
    lazy: false
    proxies:
      - 美国-手选
      - 美国-智选
      - 美国-自动
      
  - name: 美国-手选
    type: select
    include-all: true
    filter: "(?=.*(广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸|United States|QRN170|qiang)).*$"
    
  - name: 美国-智选
    type: smart
    include-all: true
    policy-priority: "(?=.*糖果云).*$:1.5;(?=.*红杏云).*$:1.4;(?=.*冰云).*$:1.3;(?=.*QGPC1-200G).*$:1.2;(?=.*69云).*$:1.1;(?=.*QRN170).*$:1.0;(?=.*CFV).*$:0.8;.*:1.0"
    uselightgbm: true
    collectdata: true
    health-check: 
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 60
      tolerance: 2
    strategy: sticky-sessions
    interval: 180
    filter: "(?=.*(广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸|United States|QRN170|qiang)).*$"

  - name: 美国-自动
    type: url-test
    include-all: true
    tolerance: 50
    interval: 300
    filter: "(?=.*(广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸|United States|QRN170|qiang)).*$"

  # 其他组
  
  - name: 其他-故转
    type: fallback
    interval: 180
    lazy: false
    proxies:
      - 其他-手选
      - 其他-智选
  - name: 其他-手选
    type: select
    include-all: true
    filter: "^((?!(直连|拒绝|域名|问题|访问|订阅|失败|失联|剩余|流量|距离|下次|重置|套餐|到期|官网|刷新|失败|异常|公告|广港|香港|HK|Hong Kong|🇭🇰|HongKong|广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan|广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan|广新|新加坡|SG|坡|狮城|🇸🇬|Singapore|广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸|United States)).)*$"

  - name: 其他-智选
    type: smart
    include-all: true
    policy-priority: "(?=.*糖果云).*$:1.5;(?=.*红杏云).*$:1.4;(?=.*冰云).*$:1.3;(?=.*QGPC1-200G).*$:1.2;(?=.*69云).*$:1.1;(?=.*QRN170).*$:1.0;(?=.*CFV).*$:0.8;.*:1.0"
    uselightgbm: true
    collectdata: true
    health-check: 
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 60
      tolerance: 2
    strategy: sticky-sessions
    interval: 180
    filter: "^((?!(直连|拒绝|域名|问题|访问|订阅|失败|失联|剩余|流量|距离|下次|重置|套餐|到期|官网|刷新|失败|异常|公告|广港|香港|HK|Hong Kong|🇭🇰|HongKong|广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan|广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan|广新|新加坡|SG|坡|狮城|🇸🇬|Singapore|广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸|United States)).)*$"

# ========================
# 规则引擎（rules）
# ========================
rules:
  # ===========================================================
  # 规则顺序: 域名规则 > IP 规则 > 最终匹配
  # 1. 优先处理需要精确匹配的域名规则
  # ===========================================================

  # 1.1 本地/特殊规则
  - RULE-SET,TEST / Domain,Test
  - RULE-SET,Block / Domain,Block
  - RULE-SET,Private / Domain,国内

  # 1.2 AI 服务 (最高优先级)
  - DOMAIN-SUFFIX,aistudio.google.com,AI
  - RULE-SET,Gemini / Domain,AI
  - RULE-SET,ChatGPT / Domain,AI
  - RULE-SET,Claude / Domain,AI
  - RULE-SET,Groq / Domain,AI
  - RULE-SET,Grok / Domain,AI
  - RULE-SET,Meta AI / Domain,Meta AI
  - RULE-SET,Perplexity / Domain,Perplexity
  - RULE-SET,Copilot / Domain,AI

  # 1.3 核心服务 (YouTube, Google)
  - RULE-SET,Youtube / Domain,Youtube
  - RULE-SET,Google / Domain,Google

  # 1.4 其他需要代理的服务
  - RULE-SET,GitHub / Domain,GitHub
  - RULE-SET,Microsoft / Domain,Microsoft
  - RULE-SET,Apple / Domain,Apple
  - RULE-SET,Apple-CN / Domain,Apple
  - RULE-SET,Twitter / Domain,Stream Media
  - RULE-SET,Reddit / Domain,Reddit
  - RULE-SET,WhatsApp / Domain,Stream Media
  - RULE-SET,Facebook / Domain,Stream Media
  - RULE-SET,Telegram / Domain,Stream Media
  - RULE-SET,TikTok / Domain,Stream Media
  - RULE-SET,Netflix / Domain,Stream Media
  - RULE-SET,Disney / Domain,Stream Media
  - RULE-SET,Amazon / Domain,Stream Media
  - RULE-SET,HBO / Domain,Stream Media
  - RULE-SET,Crunchyroll / Domain,Stream Media
  - RULE-SET,Popcorn / Domain,Stream Media  
  - RULE-SET,Spotify / Domain,Stream Media
  - RULE-SET,OKX / Domain,Crypto
  - RULE-SET,Bybit / Domain,Crypto
  - RULE-SET,Binance / Domain,Crypto
  - RULE-SET,Steam / Domain,Games
  - RULE-SET,Epic / Domain,Games
  - RULE-SET,EA / Domain,Games
  - RULE-SET,Blizzard / Domain,Games
  - RULE-SET,UBI / Domain,Games
  - RULE-SET,PlayStation / Domain,Games
  - RULE-SET,Nintend / Domain,Games
  - RULE-SET,Nvidia / Domain,Nvidia

  # 1.5 全局代理域名
  - RULE-SET,强外 / Domain,国外
  - RULE-SET,Proxy / Domain,国外
  - RULE-SET,Globe / Domain,国外

  # 1.6 国内直连域名
  - RULE-SET,强内 / Domain,国内
  - RULE-SET,Direct / Domain,国内
  - RULE-SET,China / Domain,国内

  # ===========================================================
  # 2. 其次处理基于 IP 的规则 (作为域名规则的补充)
  # ===========================================================
  - RULE-SET,Telegram / IP,Stream Media,no-resolve
  - RULE-SET,Netflix / IP,Stream Media,no-resolve
  - RULE-SET,Google / IP,Google,no-resolve
  - RULE-SET,China / IP,国内,no-resolve

  # ===========================================================
  # 3. 所有规则都未匹配时，执行最终兜底规则
  # ===========================================================
  - MATCH,其他

# ========================
# 规则集提供者
# ========================
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}

rule-providers:
  强内 / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/qiang-cn.list"}
  强外 / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/qiang-abroad.list"}
  TEST / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/Check.list"}
  ChatGPT / Domain: {<<: *class,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/openai.list"}
  Claude / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/Claude.list"}
  Meta AI / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/MetaAi.list"}
  Perplexity / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/perplexity.list"}
  Copilot / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/Copilot.list"}
  Gemini / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/gemini-new.list"}
  GitHub / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/github.list"}
  Amazon / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/amazon.list"}
  Apple-CN / Domain: {<<: *class,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/apple-cn.list"}
  Apple / Domain: {<<: *class,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/apple.list"} 
  Microsoft / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/microsoft.list"}
  OKX / Domain: {<<: *class,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/okx.list"}
  Bybit / Domain: {<<: *class,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/bybit.list"}
  Binance / Domain: {<<: *class,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/binance.list"}
  TikTok / Domain: {<<: *class,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/tiktok.list"}
  Netflix / Domain: {<<: *class,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/netflix.list"}
  Netflix / IP: {<<: *ip, url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/netflix-ip.list"}
  Disney / Domain: {<<: *class,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/disney.list"}
  HBO / Domain: {<<: *class,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/hbo.list"}
  Spotify / Domain: {<<: *class,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/spotify.list"}
  Steam / Domain: {<<: *class,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/steam.list"}
  Epic / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/Epic.list"}
  EA / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/EA.list"}
  Blizzard / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/Blizzard.list"}
  UBI / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/UBI.list"}
  PlayStation / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/PlayStation.list"}
  Nintend / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/Nintendo.list"}
  Proxy / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/Proxy.list"}
  Globe / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/Global.list"} 
  Block / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/Block.list"}
  Nvidia / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/Nvidia.list"}
  Crunchyroll / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/Crunchyroll.list"}
  Reddit / Domain: {<<: *class,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/reddit.list"}
  Groq / Domain: {<<: *class,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/groq.list"}
  Grok / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/Grok.list"}
  Popcorn / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/Popcorn.list"}
  Direct / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/Direct.list"}
  Private / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/private.list"}
  China / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/cn.list"}
  China / IP: {<<: *ip, url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/cn-ip.list"}
  Twitter / Domain: {<<: *class,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/x.list"}
  WhatsApp / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/Whatsapp.list"}
  Facebook / Domain: {<<: *class,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/facebook.list"}
  Telegram / Domain: {<<: *class,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/telegram.list"}  
  Telegram / IP: {<<: *ip, url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/telegram-ip.list"}
  Youtube / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/youtube.list"} 
  Google / Domain: {<<: *domain,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/google-new.list"}  
  Google / IP: {<<: *ip, url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/google-ip.list"}
#  GateFireWall / Domain: {<<: *class,  url: "https://edgeone.gh-proxy.com/https://raw.githubusercontent.com/iBigQiang/clash/main/rule-refs/gfw.list"}